/*
 * Card.java
 * 
 * A blueprint class for objects that represent a single playing card 
 * for the game Buno.
 */

public class Card {
  /* The smallest possible value that a Card can have. */
  private String color;
  private int value;
  public static final int MIN_VALUE = 0;
  
  /* The possible colors that a Card can have. */
  public static final String[] COLORS = {"blue", "green", "red", "yellow"};
  
  /* Define the third class constant here. */
  public static final int MAX_VALUE = 9;
  /* Put the rest of your class definition below. */
  public static boolean isValidColor(String name){
    for(int i = 0; i<COLORS.length;i++){
      if (COLORS[i] == name){
        return true;}
    }
    return false;
  }
  public Card(String c, int v){
    this.setColor(c);
    this.setValue(v);
  }
  public void setColor(String c){
    if(isValidColor(c)){
      throw new IllegalArgumentException();
    }
    this.color = c;
  }
  public void setValue(int v){
    if(v < 0||v > 9){
      throw new IllegalArgumentException();
    }
    this.value = v;
  }
  
  public String getColor(){
    return this.color;}
  public int getValue(){
    return this.value;}
  
  
  public String toString(){
    return this.color + " " + this.value;
  }
  
  
  
  
  
}

